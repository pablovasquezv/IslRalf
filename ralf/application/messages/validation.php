<?php defined('SYSPATH') or die('No direct script access.');

return array(
    'alpha'             => ':field must contain only letters',
    'alpha_dash'        => ':field must contain only letters and dashes',
    'alpha_numeric'     => ':field must contain only letters and numbers',
    'color'             => ':field must be a color',
    'credit_card'       => ':field must be a credit card number',
    'date'              => ':field debe ser una fecha',
    'email_domain'      => ':field must contain a valid email domain',
    'ip'                => ':field debe ser una dirección IP',
    'phone'             => ':field debe ser un número de teléfono',
    'url'               => ':field debe ser una url',
    'not_empty'         => 'Debe indicar :field',
    'matches'           => ':field deben coincidir',
    'regex'             => ':field no coincide con el formato requerido',
    'exact_length'      => ':field debe ser exactamente de :param1 caracteres de largo',
    'min_length'        => ':field debe ser al menos de :param2 caracteres de largo',
    'max_length'        => ':field debe ser inferior a :param2 caracteres de largo',
    'in_array'          => ':field debe ser una de las opciones disponibles',
    'digit'             => ':field debe ser un d&iacute;gito',
    'numeric'           => 'numérico',
    'decimal'           => ':field debe ser un decimal con :param1 plazas',
    'range'             => ':field debe estar dentro del rango de :param1 a :param2',
    'unique'            => ':field :value ya existe',
    'email'             => 'Debe indicar un :field v&aacute;lido',
    'Upload::type'      => 'El tipo de archivo debe ser: :param1',
    'Upload::size'      => 'El tama&ntilde;o del archivo no debe ser superior a :param2 M',
    'Upload::not_empty' => ':field no debe estar vac&iacute;o',
    'major_date'        => ':field debe ser mayor que :param3',
    'minor_date'        => ':field debe ser menor que :param3',
    'major_equal_date'  => ':field debe ser mayor o igual que :param3',
    'minor_equal_date'  => ':field debe ser menor o igual que :param3',    
    'name'              => array('unique' => ':field :value ya existe'),
    'user'              => array('username'=>array('unique' => ':field :value ya existe'),'unique' => ':field :value ya existe'),
    'Model_User::check_current_password'=>'La actual contraseña no es correcta',
    'Model_User::check_password_if_is_the_same'=>'La nueva contraseña deber ser distinta a la anterior',
    'Model_Role::check_exists'=>'El rol ingresado es inválido',
    'Model_Role::check_forbidden'=>'El rol ingresado es inválido',
    'Valid::major_equal_than'  =>  ':field debe ser mayor o igual a :param3',
    'rut.rut'=>'El rut no es válido',
    'Utils::valor_disponible' => 'EL nombre ingresado ya existe',
    'Utils::existe_email' => 'EL email ingresado ya existe',
    'Utils::valida_rut' => 'El rut ingresado es invalido',
    'Utiles::rut' => 'El rut ingresado es invalido',
    'Utiles::whitespace' => 'No puede tener solo espacios en blanco',
    'Utiles::size_min' => 'Debe ingresar un archivo de mayor tamaño',
    'Utiles::is_float' => 'Debe ser decimal',
    'Utiles::nonNegativeInteger' => 'Debe ser positivo',
    'Utiles::fecha_minima' => 'Debe ser mayor a 1900-01-01',
    'Utiles::mayorqueuno' => 'Debe ser mayor a 1',
    'Utiles::validateDate'=> 'La fecha ingresada es invalida',
    'Utiles::validaFechaMenorHoy'=> 'Debe ser menor o igual a hoy',
    'Utiles::validaCodigoCausa'=>'Codigo de causa no existe'
    

    
    
);
